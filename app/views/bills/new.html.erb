<% content_for :page_title, 'Create Credit Bill' %>

<div class="p-6 max-w-6xl mx-auto">
  <!-- Header Section -->
  <div class="bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl border border-white/20 overflow-hidden mb-6">
    <div class="bg-gradient-to-r from-blue-600 to-indigo-600 px-8 py-6">
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
        <div>
          <h1 class="text-3xl font-bold text-white mb-2">Create Credit Bill</h1>
          <p class="text-blue-100">Create bill for <strong><%= @customer.name %></strong> to pay later</p>
        </div>
        <div class="mt-4 sm:mt-0">
          <%= link_to bills_path,
              class: "inline-flex items-center px-6 py-3 bg-white text-blue-600 text-sm font-semibold rounded-xl hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-blue-600 transition-all duration-200 transform hover:scale-105 shadow-lg no-underline" do %>
            <i data-feather="arrow-left" class="w-4 h-4 mr-2"></i>
            Back to Bills
          <% end %>
        </div>
      </div>
    </div>
  </div>

      <%= form_with model: [@customer, @bill], local: true, id: "credit-bill-form", class: "space-y-6" do |form| %>
        <%= form.hidden_field :bill_type, value: 'credit' %>
        <% if @bill.errors.any? %>
          <div class="bg-red-50 border border-red-200 rounded-md p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <i data-feather="alert-circle" class="h-5 w-5 text-red-400"></i>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">
                  <%= pluralize(@bill.errors.count, "error") %> prohibited this bill from being saved:
                </h3>
                <div class="mt-2 text-sm text-red-700">
                  <ul role="list" class="list-disc pl-5 space-y-1">
                    <% @bill.errors.full_messages.each do |message| %>
                      <li><%= message %></li>
                    <% end %>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        <% end %>

        <!-- Bill Items Section -->
        <div class="bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl border border-white/20 overflow-hidden">
          <div class="px-6 py-4 border-b border-gray-100">
            <div class="flex justify-between items-center">
              <h3 class="text-lg font-semibold text-gray-900">Bill Items</h3>
              <button type="button" id="add-item" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg text-sm transition-colors">
                <i data-feather="plus" class="w-4 h-4 inline mr-2"></i>
                Add Item
              </button>
            </div>
          </div>
          
          <div class="px-6 py-6">
            <div id="bill-items" class="space-y-4">
              <!-- Template for bill items will be added here by JavaScript -->
            </div>
            
            <div class="mt-6 pt-4 border-t border-gray-100">
              <div class="flex justify-end">
                <div class="w-64">
                  <div class="flex justify-between items-center">
                    <span class="text-lg font-semibold text-gray-900">Total Amount:</span>
                    <span id="total-amount" class="text-2xl font-bold text-blue-600">PKR 0</span>
                  </div>
                  <div class="text-sm text-gray-500 mt-1">Payment: Credit (Pay Later)</div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Due Date and Notes Section -->
        <div class="bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl border border-white/20 overflow-hidden">
          <div class="px-6 py-4 border-b border-gray-100">
            <h3 class="text-lg font-semibold text-gray-900">Additional Details</h3>
          </div>
          <div class="px-6 py-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <%= form.label :due_date, class: "block text-sm font-medium text-gray-700 mb-2" %>
                <%= form.date_field :due_date, 
                    value: (Date.current + 30.days).strftime("%Y-%m-%d"),
                    class: "w-full px-4 py-3 border border-gray-300 rounded-xl shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" %>
                <p class="text-xs text-gray-500 mt-1">Default: 30 days from today</p>
              </div>
              <div>
                <%= form.label :notes, class: "block text-sm font-medium text-gray-700 mb-2" %>
                <%= form.text_area :notes, 
                    rows: 3,
                    class: "w-full px-4 py-3 border border-gray-300 rounded-xl shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors",
                    placeholder: "Any special notes for this credit bill..." %>
              </div>
            </div>
          </div>
        </div>

        <!-- Actions -->
        <div class="flex justify-end space-x-3">
          <%= link_to customer_path(@customer), 
              class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" do %>
            Cancel
          <% end %>
          
          <%= form.submit "Create Bill", 
              class: "ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500",
              id: "submit-bill" %>
        </div>
      <% end %>
    </div>
  </main>
</div>

<!-- Bill Item Template -->
<template id="bill-item-template">
  <div class="bill-item border border-gray-200 rounded-lg p-4">
    <div class="flex justify-between items-start mb-4">
      <h4 class="text-sm font-medium text-gray-900">Item <span class="item-number"></span></h4>
      <button type="button" class="remove-item text-red-600 hover:text-red-800">
        <i data-feather="x-circle" class="w-5 h-5"></i>
      </button>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
      <div class="md:col-span-2">
        <label class="block text-sm font-medium text-gray-700">Product</label>
        <select class="product-select mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" required>
          <option value="">Select a product...</option>
          <% @products.each do |product| %>
            <option value="<%= product.id %>" 
                    data-selling-price="<%= product.selling_price %>" 
                    data-stock="<%= product.quantity_in_packs %>"
                    data-name="<%= product.name %>">
              <%= product.name %> (Stock: <%= product.quantity_in_packs %> packs) - PKR <%= product.selling_price %>
            </option>
          <% end %>
        </select>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700">Quantity (Packs)</label>
        <input type="number" class="quantity-input mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" 
               min="1" step="1" required>
        <div class="stock-warning text-xs text-red-500 mt-1" style="display: none;"></div>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700">Unit Price</label>
        <input type="number" class="unit-price-input mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" 
               step="0.01" required readonly>
      </div>
    </div>
    
    <div class="mt-4 flex justify-end">
      <div class="text-right">
        <span class="text-sm text-gray-500">Item Total: </span>
        <span class="item-total text-lg font-semibold text-blue-600">PKR 0</span>
      </div>
    </div>
    
    <!-- Hidden fields for form submission -->
    <input type="hidden" class="product-id-field" name="bill[bill_items_attributes][INDEX][product_id]">
    <input type="hidden" class="quantity-field" name="bill[bill_items_attributes][INDEX][quantity]">
    <input type="hidden" class="unit-price-field" name="bill[bill_items_attributes][INDEX][unit_price]">
  </div>
</template>

<script>
let itemIndex = 0;
let totalAmount = 0;

document.addEventListener('DOMContentLoaded', function() {
  feather.replace();
  
  const addItemBtn = document.getElementById('add-item');
  const billItemsContainer = document.getElementById('bill-items');
  const template = document.getElementById('bill-item-template');
  
  // Add first item automatically
  addBillItem();
  
  addItemBtn.addEventListener('click', addBillItem);
  
  function addBillItem() {
    const clone = template.content.cloneNode(true);
    const billItem = clone.querySelector('.bill-item');
    
    // Update item number
    billItem.querySelector('.item-number').textContent = itemIndex + 1;
    
    // Update field names with current index
    billItem.querySelectorAll('input[name*="INDEX"]').forEach(input => {
      input.name = input.name.replace('INDEX', itemIndex);
    });
    
    // Add event listeners
    const productSelect = billItem.querySelector('.product-select');
    const quantityInput = billItem.querySelector('.quantity-input');
    const unitPriceInput = billItem.querySelector('.unit-price-input');
    const removeBtn = billItem.querySelector('.remove-item');
    
    productSelect.addEventListener('change', function() {
      const selectedOption = this.options[this.selectedIndex];
      const sellingPrice = selectedOption.dataset.sellingPrice;
      const stock = parseInt(selectedOption.dataset.stock);
      
      unitPriceInput.value = sellingPrice || '';
      
      // Update hidden fields
      billItem.querySelector('.product-id-field').value = this.value;
      billItem.querySelector('.unit-price-field').value = sellingPrice || '';
      
      // Check stock availability
      const stockWarning = billItem.querySelector('.stock-warning');
      if (stock <= 0) {
        stockWarning.textContent = 'Out of stock!';
        stockWarning.style.display = 'block';
        quantityInput.max = 0;
        quantityInput.disabled = true;
      } else {
        stockWarning.style.display = 'none';
        quantityInput.max = stock;
        quantityInput.disabled = false;
      }
      
      updateItemTotal(billItem);
    });
    
    quantityInput.addEventListener('input', function() {
      const stock = parseInt(productSelect.options[productSelect.selectedIndex]?.dataset.stock || 0);
      const quantity = parseInt(this.value || 0);
      
      const stockWarning = billItem.querySelector('.stock-warning');
      if (quantity > stock) {
        stockWarning.textContent = `Only ${stock} packs available!`;
        stockWarning.style.display = 'block';
      } else {
        stockWarning.style.display = 'none';
      }
      
      // Update hidden field
      billItem.querySelector('.quantity-field').value = this.value;
      updateItemTotal(billItem);
    });
    
    removeBtn.addEventListener('click', function() {
      if (billItemsContainer.children.length > 1) {
        billItem.remove();
        updateTotalAmount();
        updateItemNumbers();
      }
    });
    
    billItemsContainer.appendChild(billItem);
    itemIndex++;
    
    // Reinitialize feather icons
    feather.replace();
  }
  
  function updateItemTotal(billItem) {
    const quantity = parseFloat(billItem.querySelector('.quantity-input').value || 0);
    const unitPrice = parseFloat(billItem.querySelector('.unit-price-input').value || 0);
    const total = quantity * unitPrice;
    
    billItem.querySelector('.item-total').textContent = `PKR ${total.toFixed(2)}`;
    updateTotalAmount();
  }
  
  function updateTotalAmount() {
    totalAmount = 0;
    document.querySelectorAll('.bill-item').forEach(item => {
      const quantity = parseFloat(item.querySelector('.quantity-input').value || 0);
      const unitPrice = parseFloat(item.querySelector('.unit-price-input').value || 0);
      totalAmount += quantity * unitPrice;
    });
    
    document.getElementById('total-amount').textContent = `PKR ${totalAmount.toFixed(2)}`;
  }
  
  function updateItemNumbers() {
    document.querySelectorAll('.bill-item').forEach((item, index) => {
      item.querySelector('.item-number').textContent = index + 1;
    });
  }
  
  // Form validation before submit
  document.getElementById('submit-bill').addEventListener('click', function(e) {
    const billItems = document.querySelectorAll('.bill-item');
    let hasValidItems = false;
    
    billItems.forEach(item => {
      const productSelect = item.querySelector('.product-select');
      const quantityInput = item.querySelector('.quantity-input');
      
      if (productSelect.value && quantityInput.value && parseInt(quantityInput.value) > 0) {
        hasValidItems = true;
      }
    });
    
    if (!hasValidItems) {
      e.preventDefault();
      alert('Please add at least one valid item to the bill.');
      return false;
    }
    
    if (totalAmount <= 0) {
      e.preventDefault();
      alert('Bill total must be greater than 0.');
      return false;
    }
  });
});
</script>
